[ipfs]
    # The address of the API server for your IPFS node.
    api = "http://127.0.0.1:5001"

    # Generate URLs using a public gateway. If this is false, ipfs:// URLs will
    # be generated instead.
    use-gateway = true

    # The public gateway to use for generating URLs.
    gateway = "dweb.link"

    # The CAR version to use. Supported values are "1" and "2".
    car-version = "1"

[archive]
    # A golang `text/template` template which is passed the contents of the
    # bibtex entry and returns the name of the source directory. Functions
    # provided by the sprig library are available in the template. The
    # following field are available in the template:
    # .Key - The bibtex entry ID
    # .Type - The bibtex entry type (e.g. "article")
    # .Fields - A map of fields that appear in the bibtex entry
    name-template = "{{ coalesce (get .Fields \"doi\") .Key }}"

    # The media types (MIME types) of content that the tool will not attempt to
    # archive.
    #excluded-types = [
    #    "text/html",
    #]

# A handler which looks for embedded documents in HTML documents.
[handlers.embed]
    # Enable this handler.
    enabled = true

    # The media types (MIME types) of the embedded content to look for.
    media-types = [
        "application/pdf",
    ]

# A handler which takes a snapshot of an HTML document using monolith.
[handlers.monolith]
    # Enable this handler.
    enabled = true

    # The path to the monolith binary.
    path = "monolith"


# A list of proxy rules which can be used to resolve source URLs or DOIs.
#[[proxies]]
    # A list of proxy schemes to try in order. Each scheme is a golang
    # `text/template` template which returns the proxied URL. If a template
    # evaluates to an empty string, it is ignored. Functions provided by the
    # sprig library are available in the template. The following fields are
    # available in the template:
    # .Doi - The DOI of the entry, excluding the doi: or https://doi.org/ prefix (e.g. 10.1038/nphys1170)
    # .Url.Host - The hostname of source URL (e.g. example.com)
    # .Url.Path - The path of the source URL, excluding the leading slash (e.g. about/index.html)
    # .Url.Directory - The directory path of the source URL, excluding the leading slash (e.g. about/)
    # .Url.Filename - The file name of the source URL (e.g. index.html)
    # If either `.Doi` or `.Url` don't exist in the bibtex entry, they will be
    # nil.
    #schemes = [
    #    "{{ if not (empty .Doi) }}example.com/{{ .Doi }}{{ end }}",
    #    "{{ if not (empty .Url) }}{{ .Url.Hostname }}.example.com/{{ .Url.Path }}{{ end }}",
    #]

    # The entry URL is only passed to the template when it has one of these
    # hostnames. Otherwise, the `.Url` field will be nil. If this list is
    # empty, then the entry URL is always passed to the template unless its
    # hostname is in `exclude-hostnames`.
    #include-hostnames = [
    #    "example.org",
    #    "research.example.com",
    #]

    # The entry URL is not passed to the template when it has one of these
    # hostnames. In this case, the `.Url` field will be nil.
    #exclude-hostnames = [
    #    "example.org",
    #    "research.example.com",
    #]
